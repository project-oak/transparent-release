"OakFunctionsLoaderTeam" says {
    // The product team can change this line to pick how to accept outputs from 
    // trusted builders. For example:
    // - one team might only trust github actions, but not any other builder
    // - another team might be OK with getting output from either builder
    // - another team might insist on getting the same output from both builders
    // - another team might want the same output from k out of n trusted builders
    // Product teams will usually not want to write much authorization logic. 
    // So we offer policy principals that encode these common options. The 
    // product team can pick one of these options by _delegating_ to principals
    // that encodes one of these policy choices. Product teams with different needs
    // can also choose not to delegate to one of these policies and write a complete
    // policy on their own

    "GithubActionsPolicy" canSay BuildPolicyAllowRelease("oak_functions_loader:0f2189703c57845e09d8ab89164a4041c0af0a62::Binary", any_hash).

    /// Other options for binary release process
    // // Only trust output from GoogleCloudBuild
    // "GoogleCloudBuildPolicy" canSay BuildPolicyAllowRelease("oak_functions_loader:0f2189703c57845e09d8ab89164a4041c0af0a62::Binary", any_hash).
    // //Accept an output from either builder
    // "EitherBuilderPolicy" canSay BuildPolicyAllowRelease("oak_functions_loader:0f2189703c57845e09d8ab89164a4041c0af0a62::Binary", any_hash).
    // // Accept output from either builder
    // "AllBuildersPolicy" canSay BuildPolicyAllowRelease("oak_functions_loader:0f2189703c57845e09d8ab89164a4041c0af0a62::Binary", any_hash).

    "UnixEpochTime" canSay RealTimeNsecIs(any_time).

    "OakFunctionsLoaderTeam" hasPublicKey(
"-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnyr7XY6gxXPnqRGYEpv5lDsbBeX
izVFLckaF/cbgBuzx7kfmf1qi2j+3DDOQYgISQOj9/LYt4c1cxbt+XtG4g==
-----END PUBLIC KEY-----"
    ).

    // TODO: add expiry_time as "release_time+X" where X is some appropriate lifespan. This may require small extensions to the auth logic implementation.

    releaseEndorsement(oak_team_key, "OakFunctionsLoaderTeam", functions_loader_hash, release_time) :-
        BuildPolicyAllowRelease("oak_functions_loader:0f2189703c57845e09d8ab89164a4041c0af0a62::Binary", any_hash), 
        RealTimeNsecIs(release_time),
        "OakFunctionsLoaderTeam" hasPublicKey(oak_team_key).
}
