name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-all:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '=1.18.4'

      - name: Build
        run: |
          go build ./...
      - name: Test
        run: |
          go test ./...
      - name: endorser-e2e
        run: |
          go run cmd/endorser/main.go \
            --binary_digest=sha256:39051983bbb600bbfb91bd22ee4c976420f8f0c6a895fd083dcb0d153ddd5fd6 \
            --binary_name=oak_echo_raw_enclave_app \
            --provenance_uris=https://ent-server-62sa4xcfia-ew.a.run.app/raw/sha256:b28696a8341443e3ba433373c60fe1eba8d96f28c8aff6c5ee03d752dd3b399b \
            --verification_options=testdata/skip_verification.textproto

  # TODO(#113): Find a better, and easier-to-navigate way to report coverage.
  # Generate coverage report for ./pkg/... and ./internal/... and upload the report as an html file.
  # See `go help testflag` and `go tool cover -help` for more options.
  test-coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '=1.18.4'
      - name: Run go test
        run: |
          go test -coverpkg=./... -coverprofile coverage.out ./pkg/... ./internal/...
          go tool cover -func=coverage.out
          go tool cover -html=coverage.out -o coverage.html
      - uses: actions/upload-artifact@v3
        with:
          name: coverage.html
          path: coverage.html

  check-license-lines:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Check License Lines
        uses: kt3k/license_checker@v1.0.6

  formatting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '=1.18.4'
      - name: Run go fmt
        run: |
          ./scripts/formatting.sh

  linting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '=1.18.4'
      - name: Run golint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.48.0
          ./scripts/linting.sh

  vetting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '=1.18.4'
      - name: Run go vet
        run: |
          go vet ./...
