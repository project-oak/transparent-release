// Copyright 2023 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: proto/digest.proto

package digest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The keys in the per-encoding maps. NB: enums are not allowed in proto
// maps. We support some permanent values from
// https://github.com/multiformats/multicodec/blob/master/table.csv
type Digest_Type int32

const (
	Digest_IDENTITY Digest_Type = 0
	Digest_SHA1     Digest_Type = 17
	Digest_SHA2_256 Digest_Type = 18
	Digest_SHA2_512 Digest_Type = 19
	Digest_SHA3_512 Digest_Type = 20
	Digest_SHA3_384 Digest_Type = 21
	Digest_SHA3_256 Digest_Type = 22
	Digest_SHA3_224 Digest_Type = 23
	Digest_SHA2_384 Digest_Type = 32
)

// Enum value maps for Digest_Type.
var (
	Digest_Type_name = map[int32]string{
		0:  "IDENTITY",
		17: "SHA1",
		18: "SHA2_256",
		19: "SHA2_512",
		20: "SHA3_512",
		21: "SHA3_384",
		22: "SHA3_256",
		23: "SHA3_224",
		32: "SHA2_384",
	}
	Digest_Type_value = map[string]int32{
		"IDENTITY": 0,
		"SHA1":     17,
		"SHA2_256": 18,
		"SHA2_512": 19,
		"SHA3_512": 20,
		"SHA3_384": 21,
		"SHA3_256": 22,
		"SHA3_224": 23,
		"SHA2_384": 32,
	}
)

func (x Digest_Type) Enum() *Digest_Type {
	p := new(Digest_Type)
	*p = x
	return p
}

func (x Digest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Digest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_digest_proto_enumTypes[0].Descriptor()
}

func (Digest_Type) Type() protoreflect.EnumType {
	return &file_proto_digest_proto_enumTypes[0]
}

func (x Digest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Digest_Type.Descriptor instead.
func (Digest_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_digest_proto_rawDescGZIP(), []int{0, 0}
}

// Contains various digest formats for the same underlying file.
type Digest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maps algorithm to the actual raw digest value.
	// The map value is a function of the underlying file and the map key only.
	Binary map[int32][]byte `protobuf:"bytes,1,rep,name=binary,proto3" json:"binary,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Maps algorithm to the hex-encoded digest, e.g. for type SHA2_256
	// this could be
	// "82aac1adbfe3ada1244c1f54b7c949519e1f048067d0c3b236b7ae048fc7e227"
	Hexadecimal map[int32]string `protobuf:"bytes,2,rep,name=hexadecimal,proto3" json:"hexadecimal,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Digest) Reset() {
	*x = Digest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_digest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Digest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Digest) ProtoMessage() {}

func (x *Digest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_digest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Digest.ProtoReflect.Descriptor instead.
func (*Digest) Descriptor() ([]byte, []int) {
	return file_proto_digest_proto_rawDescGZIP(), []int{0}
}

func (x *Digest) GetBinary() map[int32][]byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *Digest) GetHexadecimal() map[int32]string {
	if x != nil {
		return x.Hexadecimal
	}
	return nil
}

var File_proto_digest_proto protoreflect.FileDescriptor

var file_proto_digest_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f, 0x61, 0x6b, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x22, 0x87, 0x03, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x61, 0x6b, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x68, 0x65, 0x78, 0x61, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x61, 0x6b,
	0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x48, 0x65, 0x78, 0x61, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x68, 0x65, 0x78, 0x61, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x1a, 0x39, 0x0a,
	0x0b, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x48, 0x65, 0x78, 0x61,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x48, 0x41, 0x31, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41,
	0x32, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x12, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x32, 0x5f,
	0x35, 0x31, 0x32, 0x10, 0x13, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x35, 0x31,
	0x32, 0x10, 0x14, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x33, 0x38, 0x34, 0x10,
	0x15, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x16, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x48, 0x41, 0x33, 0x5f, 0x32, 0x32, 0x34, 0x10, 0x17, 0x12, 0x0c, 0x0a,
	0x08, 0x53, 0x48, 0x41, 0x32, 0x5f, 0x33, 0x38, 0x34, 0x10, 0x20, 0x42, 0x0e, 0x5a, 0x0c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_digest_proto_rawDescOnce sync.Once
	file_proto_digest_proto_rawDescData = file_proto_digest_proto_rawDesc
)

func file_proto_digest_proto_rawDescGZIP() []byte {
	file_proto_digest_proto_rawDescOnce.Do(func() {
		file_proto_digest_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_digest_proto_rawDescData)
	})
	return file_proto_digest_proto_rawDescData
}

var file_proto_digest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_digest_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_digest_proto_goTypes = []interface{}{
	(Digest_Type)(0), // 0: oak.release.Digest.Type
	(*Digest)(nil),   // 1: oak.release.Digest
	nil,              // 2: oak.release.Digest.BinaryEntry
	nil,              // 3: oak.release.Digest.HexadecimalEntry
}
var file_proto_digest_proto_depIdxs = []int32{
	2, // 0: oak.release.Digest.binary:type_name -> oak.release.Digest.BinaryEntry
	3, // 1: oak.release.Digest.hexadecimal:type_name -> oak.release.Digest.HexadecimalEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_digest_proto_init() }
func file_proto_digest_proto_init() {
	if File_proto_digest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_digest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Digest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_digest_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_digest_proto_goTypes,
		DependencyIndexes: file_proto_digest_proto_depIdxs,
		EnumInfos:         file_proto_digest_proto_enumTypes,
		MessageInfos:      file_proto_digest_proto_msgTypes,
	}.Build()
	File_proto_digest_proto = out.File
	file_proto_digest_proto_rawDesc = nil
	file_proto_digest_proto_goTypes = nil
	file_proto_digest_proto_depIdxs = nil
}
